{"version":3,"sources":["./src/app/pages/main/main.component.ts","./src/app/pages/main/main.component.html","./src/app/includes/footer/footer.component.ts","./src/app/includes/footer/footer.component.html","./src/environments/environment.ts","./src/app/pages/menu/menu.component.html","./src/app/pages/menu/menu.component.ts","./src/app/comp2/comp2.component.ts","./src/app/comp2/comp2.component.html","./src/app/compinfo/compinfo.component.ts","./src/app/compinfo/compinfo.component.html","./src/app/appServices/firebase.service.ts","./src/app/pages/togglebutton/togglebutton.component.ts","./src/app/pages/togglebutton/togglebutton.component.html","./src/app/includes/header/header.component.ts","./src/app/includes/header/header.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/comp3/comp3.component.ts","./src/app/comp3/comp3.component.html","./src/app/comp1/comp1.component.ts","./src/app/comp1/comp1.component.html","./src/app/app.module.ts","./src/app/store/state/employee.state.ts","./src/app/pages/employee/employee.component.ts","./src/app/pages/employee/employee.component.html","./src/app/pages/employeedetail/employeedetail.component.ts","./src/app/pages/employeedetail/employeedetail.component.html","./src/app/appModule/mat.module.ts","./src/app/pages/buttons/buttons.component.ts","./src/app/pages/buttons/buttons.component.html","./src/app/app-routing.module.ts","./src/app/store/actions/employee.action.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n  myColor ='#abc4ff7d'\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>main works!</p> -->\n<div class=\"container bg-light\">\n    <!-- use of ng-contetn -->\n    <!-- <div class=\"row\">\n    <div class=\"col-md-4\">\n        <app-compinfo>\n            <h2 class=\"h2\">Laptop</h2>\n            <button class=\"btn btn-success\">Laptop</button>\n        </app-compinfo>\n    </div>\n    <div class=\"col-md-4\">\n        <app-compinfo>\n            <h2 class=\"h2\">Mobile</h2>\n            <button class=\"btn btn-success\">Mobile</button>\n        </app-compinfo>\n    </div>\n    <div class=\"col-md-4\">\n        <app-compinfo>\n            <h2 class=\"h2\">Washing Matchine</h2>\n            <button class=\"btn btn-success\">Washing Matchine</button>\n        </app-compinfo>\n    </div>\n    </div> -->\n<h2>\n    Material Component\n</h2>\n<mat-divider></mat-divider>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-2\">\n                <a routerLink=\"buttons\">\n                <mat-card \n                class=\"mat-elevation-z10\" \n                matRipple \n                matRippleCentered=\"true\"\n                \n                [matRippleColor]=\"myColor\">\n                    <mat-icon>smart_button</mat-icon>\n                    Buttons\n                </mat-card>\n            </a>\n            </div>\n            <div class=\"col-2\">\n                <a routerLink=\"togglebutton\">\n                <mat-card>\n                    <mat-icon>smart_button</mat-icon>\n                    Toggle Buttons\n                </mat-card>\n            </a>\n            </div>\n            <div class=\"col-2\">\n                <a routerLink=\"menu\">\n                <mat-card>\n                    <mat-icon>smart_button</mat-icon>\n                    Menu\n                </mat-card>\n            </a>\n            </div>\n            <div class=\"col-2\">\n                <a routerLink=\"employee\">\n                <mat-card>\n                    <mat-icon>smart_button</mat-icon>\n                    Employyee\n                </mat-card>\n            </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer-basic\">\n    <footer>\n        <ul>\n            <li ><a href=\"#\">Home</a></li>\n            <li ><a href=\"#\">Services</a></li>\n            <li ><a href=\"#\">About</a></li>\n            <li ><a href=\"#\">Terms</a></li>\n            <li ><a href=\"#\">Privacy Policy</a></li>\n        </ul>\n        \n    </footer>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"materialComp\">\n  <div class=\"container\">\n    <h1 class=\"pt-2\">\n      Menu\n      <button class=\"btn btn-primary float-end\" routerLink=\"\">Back</button>\n    </h1>\n    <mat-divider></mat-divider>\n    <div class=\"row pt-2\">\n      <div class=\"col-md-6\">\n          <p>Basic Menu</p>\n          <mat-divider></mat-divider>\n        <button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item>Item 1</button>\n          <button mat-menu-item>Item 2</button>\n        </mat-menu>\n      </div>\n      <div class=\"col-md-6\">\n        <p>Menu with Icons</p>\n        <mat-divider></mat-divider>\n      <button mat-button [matMenuTriggerFor]=\"menu2\">Menu</button>\n      <mat-menu #menu2=\"matMenu\">\n        <button mat-menu-item><mat-icon>face</mat-icon>Item 1</button>\n        <button mat-menu-item><mat-icon>cloud</mat-icon>Item 2</button>\n      </mat-menu>\n    </div>\n    <div class=\"col-md-6\">\n        <p>Nested Menu</p>\n        <mat-divider></mat-divider>\n      <button mat-button [matMenuTriggerFor]=\"menu3\">Menu</button>\n      <mat-menu #menu3=\"matMenu\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">Item 2</button>\n        <button mat-menu-item>Item 3</button>\n      </mat-menu>\n      <mat-menu #nestedmenu=\"matMenu\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n        <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu2\">Item 3</button>\n      </mat-menu>\n      <mat-menu #nestedmenu2=\"matMenu\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n        <button mat-menu-item>Item 3</button>\n      </mat-menu>\n    </div>\n    <div class=\"col-md-6\">\n        <p>Menu Positioning</p>\n        <mat-divider></mat-divider>\n      <button mat-button [matMenuTriggerFor]=\"above\">Above</button>\n      <mat-menu #above=\"matMenu\" yPosition=\"above\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n      </mat-menu>\n      <button mat-button [matMenuTriggerFor]=\"below\">Below</button>\n      <mat-menu #below=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n      </mat-menu>\n      <button mat-button [matMenuTriggerFor]=\"before\">Before</button>\n      <mat-menu #before=\"matMenu\" xPosition=\"before\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n      </mat-menu>\n      <button mat-button [matMenuTriggerFor]=\"after\">After</button>\n      <mat-menu #after=\"matMenu\" xPosition=\"after\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n      </mat-menu>\n    </div>\n    <div class=\"col-md-6\">\n        <p>Trigger Menu</p>\n        <mat-divider></mat-divider>\n        <button mat-button [matMenuTriggerFor]=\"menu2\" #triggermenu=\"matMenuTrigger\">Menu</button>\n      <mat-menu #menu2=\"matMenu\">\n        <button mat-menu-item><mat-icon>face</mat-icon>Item 1</button>\n        <button mat-menu-item><mat-icon>cloud</mat-icon>Item 2</button>\n      </mat-menu>\n    </div>\n    <div class=\"col-md-6\">\n        <p>Passing Data In Menu</p>\n        <mat-divider></mat-divider>\n        <button mat-button [matMenuTriggerFor]=\"passData\" \n        #triggermenu=\"matMenuTrigger\"\n        [matMenuTriggerData]='{\"name\":\"Wasim\"}'\n        >Menu1</button>\n        <button mat-button [matMenuTriggerFor]=\"passData\" \n        #triggermenu=\"matMenuTrigger\"\n        [matMenuTriggerData]='{\"name\":\"Akram\"}'\n        >Menu2</button>\n        <button mat-button [matMenuTriggerFor]=\"passData\" \n        #triggermenu=\"matMenuTrigger\"\n        [matMenuTriggerData]='{\"name\":\"Faiz\"}'\n        >Menu3</button>\n        <mat-menu #passData=\"matMenu\" >\n            <ng-template matMenuContent let-name=\"name\">\n                <button mat-menu-item>Item 1</button>\n                <button mat-menu-item>Item 2</button>\n                <button mat-menu-item>{{name}}</button>\n            </ng-template>\n          </mat-menu>\n    </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n  @ViewChild('triggermenu') triggermenu: MatMenuTrigger;\n\n  someMethod() {\n    this.triggermenu.openMenu();\n  }\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.someMethod()\n    }, 2000);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comp2',\n  templateUrl: './comp2.component.html',\n  styleUrls: ['./comp2.component.scss']\n})\nexport class Comp2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>comp2 works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-compinfo',\n  templateUrl: './compinfo.component.html',\n  styleUrls: ['./compinfo.component.scss']\n})\nexport class CompinfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bg-primary\">\n   <ng-content select=\".h2\"></ng-content>\n    <p>Component 1</p>\n    <ng-content select=\".btn\"></ng-content>\n</div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable} from 'rxjs';\nimport {  employeeItem } from 'src/app/pages/employee/employee.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  constructor(private _http:HttpClient) { }\n  jsonUrl=\"http://localhost:3000/employee\"\n  addData(items){\n    return this._http.post(this.jsonUrl,items)\n  }\n  getData():Observable<employeeItem[]>{\n    return this._http.get<employeeItem[]>(this.jsonUrl)\n  }\n  updateData(obj,id){\n    return this._http.put(this.jsonUrl+'/'+id,obj)\n  }\n  getDetail(id){\n   return this._http.get(this.jsonUrl+'/'+id)\n  }\n  deleteEmp(id){\n    return this._http.delete(this.jsonUrl+'/'+id)\n   }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-togglebutton',\n  templateUrl: './togglebutton.component.html',\n  styleUrls: ['./togglebutton.component.scss']\n})\nexport class TogglebuttonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSingleButtonToggle(val){\n    console.log(val.source.checked)\n  }\n  onGrpSelected(event){\n    console.log(event.value)\n  }\n}\n","<div class=\"materialComp\">\n    <div class=\"container\">\n        <h1 class=\"pt-2\">Toggle Buttons\n            <button class=\"btn btn-primary float-end\" routerLink=\"\">Back</button>\n        </h1>\n        <mat-divider></mat-divider>\n        <div class=\"row pt-2\">\n            <div class=\"col-md-6\">\n                <mat-card>\n                    <h2>Single Button Toggle</h2>\n                    <mat-button-toggle #btntoggle (change)=\"onSingleButtonToggle($event)\">{{btntoggle.checked? 'Active' : 'InActive'}}</mat-button-toggle>\n                    {{btntoggle.checked}}\n                </mat-card>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-card>\n                    <h2>Group Button Toggle</h2>\n                    <mat-button-toggle-group #grpBtn=\"matButtonToggleGroup\" (change)=\"onGrpSelected($event)\" >\n                      <mat-button-toggle value=\"left\">\n                          <mat-icon>\n                            format_align_left\n                          </mat-icon>\n                      </mat-button-toggle>\n                      <mat-button-toggle value=\"right\">\n                          <mat-icon>\n                            format_align_right\n                          </mat-icon>\n                      </mat-button-toggle>\n                      <mat-button-toggle value=\"center\">\n                          <mat-icon>\n                              format_align_center\n                          </mat-icon>\n                      </mat-button-toggle>\n                      <mat-button-toggle value=\"justify\">\n                        <mat-icon>\n                            format_align_justify\n                        </mat-icon>\n                      </mat-button-toggle>\n                    </mat-button-toggle-group>\n                        <!-- {{grpBtn.value}} -->\n                    <p [style.text-align]=\"grpBtn.value\">\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro cupiditate dolorem tenetur blanditiis \n                            nisi maiores facilis quia quidem magnam aliquid enim alias, suscipit debitis fuga nemo qui odit officiis facere?\n                    </p>\n                  </mat-card>\n                  \n            </div>     \n            <div class=\"col-md-6\">\n                <mat-card>\n                    <h2>Multiple Group Selection</h2>\n                    <mat-button-toggle-group multiple #grpBtn2=\"matButtonToggleGroup\">\n                      <mat-button-toggle value=\"Angular\">\n                          Angular\n                      </mat-button-toggle>\n                      <mat-button-toggle value=\"React\">\n                        React\n                      </mat-button-toggle>\n                      <mat-button-toggle value=\"Vue\">\n                        Vue\n                      </mat-button-toggle>\n                      <mat-button-toggle value=\"Node\">\n                        Node\n                      </mat-button-toggle>\n                    </mat-button-toggle-group>\n\n                  </mat-card>\n                  {{grpBtn2.value}}\n            </div>         \n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <mat-toolbar color=\"primary\">\n        <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n        </button>\n        <span>My App</span>\n        <span class=\"example-spacer\"></span>\n        <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        <mat-icon>favorite</mat-icon>\n        </button>\n        <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n        <mat-icon>share</mat-icon>\n        </button>\n    </mat-toolbar>\n</header>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angularMaterial';\n}\n","<!-- <loading-bar color=\"#FF0000\" [height]=\"3\" [animationTime]=\"0.3\" [runInterval]=\"100\" [progress]=\"0\"></loading-bar> -->\n<!-- <ngx-loading-bar></ngx-loading-bar> -->\n<!-- <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar> -->\n<div id=\"wrapper\">\n  <app-header></app-header>\n    <router-outlet></router-outlet>\n    <div style=\"clear: both;\"></div>\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comp3',\n  templateUrl: './comp3.component.html',\n  styleUrls: ['./comp3.component.scss']\n})\nexport class Comp3Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>comp3 works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comp1',\n  templateUrl: './comp1.component.html',\n  styleUrls: ['./comp1.component.scss']\n})\nexport class Comp1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>comp1 works!</p>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatModule } from './appModule/mat.module';\nimport { HeaderComponent } from './includes/header/header.component';\nimport { FooterComponent } from './includes/footer/footer.component';\nimport { MainComponent } from './pages/main/main.component';\nimport { Comp1Component } from './comp1/comp1.component';\nimport { Comp2Component } from './comp2/comp2.component';\nimport { Comp3Component } from './comp3/comp3.component';\nimport { CompinfoComponent } from './compinfo/compinfo.component';\nimport { ButtonsComponent } from './pages/buttons/buttons.component';\nimport { FormsModule } from '@angular/forms';\nimport { TogglebuttonComponent } from './pages/togglebutton/togglebutton.component';\nimport { MenuComponent } from './pages/menu/menu.component';\n//Ngxs\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { EmployeeComponent } from './pages/employee/employee.component';\nimport { EmployeedetailComponent } from './pages/employeedetail/employeedetail.component';\nimport { EmployeeState } from './store/state/employee.state';\n\n// import { LoadingBarRouterModule } from '@ngx-loading-bar/router';\n// import { LoadingBarModule } from '@ngx-loading-bar/core';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    MainComponent,\n    Comp1Component,\n    Comp2Component,\n    Comp3Component,\n    CompinfoComponent,\n    ButtonsComponent,\n    TogglebuttonComponent,\n    MenuComponent,\n    EmployeeComponent,\n    EmployeedetailComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatModule,\n    FormsModule,\n \n    NgxsModule.forRoot([EmployeeState]),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { FirebaseService } from 'src/app/appServices/firebase.service';\r\nimport { employeeItem } from 'src/app/pages/employee/employee.component';\r\nimport { AddEmployee, DeleteEmployee, GetDetailEmployee, GetEmployee, UpdateEmployee } from '../actions/employee.action';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n\r\n// state model\r\nexport class EmployeeStateModel {\r\n  employees: employeeItem[];\r\n  employeeLoaded: boolean;\r\n  selectedEmployee: employeeItem;\r\n}\r\n\r\n// state\r\n@State<EmployeeStateModel>({\r\n  name: 'employees',\r\n  defaults: {\r\n    employees: [],\r\n    employeeLoaded: false,\r\n    selectedEmployee: null,\r\n  },\r\n})\r\n@Injectable()\r\nexport class EmployeeState {\r\n  constructor(private _empService: FirebaseService) {}\r\n  //selector has logic to get state data\r\n  //Get Employee list from state\r\n  @Selector()\r\n  static GetEmployeeList(state: EmployeeStateModel) {\r\n    return state.employees;\r\n  }\r\n  //get employee loaded info true or false to stop multiple http request\r\n  @Selector()\r\n  static employeeLoaded(state: EmployeeStateModel) {\r\n    return state.employeeLoaded;\r\n  }\r\n\r\n  //get selected employee from state\r\n  @Selector()\r\n  static selectedEmployeeOne(state: EmployeeStateModel) {\r\n    return state.selectedEmployee;\r\n  }\r\n  //get all data from database to state\r\n  @Action(GetEmployee)\r\n  getEmployees({ getState, setState }: StateContext<EmployeeStateModel>) {\r\n    console.log('State Action');\r\n    return this._empService.getData().pipe(\r\n      tap((res) => {\r\n        const state = getState();\r\n        setState({\r\n          ...state,\r\n          employees: res,\r\n          employeeLoaded: true,\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  //get specific employee detail into state\r\n  @Action(GetDetailEmployee)\r\n  setSelectedEmployee(\r\n    { getState, setState }: StateContext<EmployeeStateModel>,\r\n    { id }: GetDetailEmployee\r\n  ) {\r\n    //console.log(id)\r\n    const state = getState();\r\n    const empList = state.employees;\r\n    const index = empList.findIndex((emp) => emp.id == id);\r\n    // console.log(empList[index]);\r\n    if (empList.length > 0) {\r\n      setState({\r\n        ...state,\r\n        selectedEmployee: empList[index],\r\n      });\r\n    } else {\r\n      //if detail page refresh then state empty, and try make http request for selected employeee to show data and setstate\r\n      return this._empService.getDetail(id).pipe(\r\n        tap((res: employeeItem) => {\r\n          console.log([res]);\r\n          const state = getState();\r\n          const newEmpList = [res];\r\n          setState({\r\n            ...state,\r\n            employees: newEmpList,\r\n            selectedEmployee: newEmpList[0],\r\n          });\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  // Add data into state \r\n  @Action(AddEmployee)\r\n  addNewEmployee({getState, patchState}:StateContext<EmployeeStateModel>,{payload}:AddEmployee){\r\n    //console.log(payload)\r\n    debugger;\r\n    return this._empService.addData(payload).pipe(tap((res:employeeItem)=>{\r\n      const state=getState();\r\n      \r\n      // let newEmployee=[res]\r\n      console.log('new Employee')\r\n      patchState({\r\n        employees:[...state.employees,res]\r\n        \r\n      })\r\n    }))\r\n  }\r\n\r\n  // Delete data from state \r\n  @Action(DeleteEmployee)\r\n  deleteExEmployee({getState, setState}:StateContext<EmployeeStateModel>,{id}:DeleteEmployee){\r\n    console.log(id)\r\n    \r\n    // delete from database\r\n    return this._empService.deleteEmp(id).pipe(tap((res:employeeItem)=>{\r\n      \r\n      console.log(res)\r\n      const state=getState()\r\n      \r\n      // get all data except delete data\r\n      const filteredEmployee=state.employees.filter(emp=>emp.id !== id)\r\n      \r\n      //set updated data to state\r\n      setState({\r\n        ...state,\r\n        employees:filteredEmployee\r\n      })\r\n\r\n    }))\r\n  }\r\n\r\n  @Action(UpdateEmployee)\r\n    currentUpdateEmployee({getState, patchState}:StateContext<EmployeeStateModel>,{payload,id}:UpdateEmployee){\r\n      console.log(payload)\r\n     \r\n      return this._empService.updateData(payload,id).pipe(tap((res:employeeItem)=>{\r\n        \r\n        const state=getState();\r\n        const empList=state.employees;\r\n        const index=empList.findIndex(emp=>emp.id==payload.id);\r\n        console.log(index)\r\n        console.log(empList[index])\r\n        empList[index]=res;\r\n        patchState({\r\n          employees:empList\r\n        })\r\n      }))\r\n\r\n    }\r\n}\r\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { FirebaseService } from 'src/app/appServices/firebase.service';\nimport { AddEmployee, DeleteEmployee, GetEmployee, UpdateEmployee } from 'src/app/store/actions/employee.action';\nimport { EmployeeState } from 'src/app/store/state/employee.state';\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss']\n})\nexport class EmployeeComponent implements OnInit , OnDestroy {\n  emp={\n    'name':'',\n    'age':'',\n    'address':'',\n    'id':0\n  }\n  data:any=[]\n  display:any=[];\n  isSuccess:boolean=false;\n  @ViewChild('name') name:ElementRef;\n  @ViewChild('address') address:ElementRef;\n  @ViewChild('age') age:ElementRef;\n  editMode:boolean=false;\n  editIndex:number;\n  isVisible:boolean=false;\n  currentEmp:any\n  //state get employee in observable\n  @Select(EmployeeState.GetEmployeeList)display$:Observable<employeeItem[]>;\n\n  // in state get employee list loaded in state or not \n  @Select(EmployeeState.employeeLoaded)employeeLoaded$:Observable<boolean>;\n  loadedSub:Subscription;\n  constructor(\n    private _firebaseService:FirebaseService,\n    private store:Store\n    ) { }\n\n  ngOnInit() {\n\n    console.log('ngoninit')\n    this.getData()\n  }\n  addData(){\n    debugger\n    this.isVisible=true;\n    // this.currentEmp=Object.values(this.emp)\n    // console.log(typeof(this.currentEmp))\n    // console.log(this.currentEmp)\n    \n    //using state\n    this.store.dispatch(new AddEmployee(this.emp))\n\n    // using service\n      // this._firebaseService.addData(this.emp).subscribe(\n      //   (res)=>{\n      //     this.display=res;\n      //     this.isSuccess=true;\n      //     console.log(typeof(this.display))\n      //     console.log(this.display);\n      //   },\n      //   (err)=>{\n      //     console.log(err)\n      //   }\n      // )\n      this.emp={\n      'name':'',\n      'age':'',\n      'address':'',\n      'id':0\n    }\n    }\n\n  getData(){\n\n    this.isVisible=true;\n    this.isSuccess=false;\n    //get data first time from service to state\n    this.loadedSub=this.employeeLoaded$.subscribe(employeeLoadedRes=>{\n      if(!employeeLoadedRes){\n        this.store.dispatch(new GetEmployee())\n      }\n      \n    })\n    this.display$.subscribe(res=>{\n      this.display=res\n    })\n\n    // get data from service\n    // this._firebaseService.getData().subscribe(\n    //   (res)=>{\n    //     this.display = res;\n    //     this.isSuccess=false;\n    //     console.log(typeof(this.display))\n    //     console.log(this.display)\n    //   },\n    //   (err)=>{\n    //     console.log(err)\n    //   }\n    // )\n \n  }\n  editItem(index:number){\n    console.log(this.display) \n    this.editMode=true;\n    this.editIndex=index;\n    console.log(this.display[index])\n    this.name.nativeElement.value=this.display[index].name;\n    this.address.nativeElement.value=this.display[index].address;\n    this.age.nativeElement.value=this.display[index].age;\n  }\n  updateData(name,age,address){\n    debugger\n    let currentId=this.display[this.editIndex].id\n    this.emp={\n      name:name.value,\n      age:age.value,\n      address:address.value,\n      id:currentId\n    }\n  console.log(this.emp)\n  this.store.dispatch(new UpdateEmployee(this.emp,currentId))\n    // this._firebaseService.updateData(this.emp,currentId).subscribe(\n    //   (res)=>{\n    //     this.display=res\n    //     console.log(res);\n    //   },\n    //   (err)=>{\n    //     console.log(err)\n    //   }\n    // )\n\n    // this.emp={\n    //   name:name.value.reset(),\n    //   age:age.value.reset(),\n    //   address:address.value.reset()\n    //   id:id.value.reset()\n    // }\n    this.getData()\n  }\n  deleteItem(id){\n    debugger\n    let isDelete=confirm(\"Do you want to delete this item!\")\n    //console.log(id)\n    if(isDelete){\n      this.store.dispatch(new DeleteEmployee(id))\n      // this._firebaseService.deleteEmp(id).subscribe(\n      //   res=>{\n      //     console.log(res)\n      //   },\n      //   err=>{\n      //     console.log(err)\n      //   }\n      // )\n    }\n    this.getData()\n  }\n  ngOnDestroy(){\n    this.loadedSub.unsubscribe()\n  }\n}\nexport class employeeItem {\n  id: number;\n  name: string;\n  age:string;\n  address:string;\n}","<div class=\"container\">\n  <div class=\"row mt-2\">\n    <h1 class=\"pt-2\">Employee Info\n        <button class=\"btn btn-primary float-end\" routerLink=\"\">Back</button>\n    </h1>\n    <hr>\n    </div>\n    <div class=\"row\">\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"name\" class=\"form-label mt-2\">Employee Name</label>\n      <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control\"\n            placeholder=\"Name\"\n            [(ngModel)]=\"emp.name\"\n            #name\n          />\n          </div>\n      </div>\n      \n    </div>\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"age\" class=\"form-label mt-2\">Employee Age</label>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n            <input\n        type=\"text\"\n        id=\"age\"\n        class=\"form-control\"\n        placeholder=\"age\"\n        [(ngModel)]=\"emp.age\"\n        #age\n      />\n            </div>\n            </div>\n      \n    </div>\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"address\" class=\"form-label mt-2\">Employee Address</label>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n            <input\n        type=\"text\"\n        id=\"address\"\n        class=\"form-control\"\n        placeholder=\"address\"\n        [(ngModel)]=\"emp.address\"   \n        #address\n      />\n            </div>\n            </div>\n    </div>\n    <div class=\"col-md-3 mb-3\">\n        \n        <div class=\"row mt-4\">\n            <div class=\"col-md-12 mt-1\">\n                <button class=\"btn btn-outline-primary mt-2 mb-2\" id=\"add\" (click)=\"addData()\">\n                    Add\n                  </button>\n                  <!-- <button\n                    class=\"btn btn-outline-primary mt-2 mb-2 mx-3\"\n                    (click)=\"getData()\">\n                    Get\n                  </button> -->\n                  <button\n                    *ngIf=\"editMode\"\n                    class=\"btn btn-outline-primary mt-2 mb-2 float-end\"\n                    (click)=\"updateData(name, age, address)\">\n                    Update\n                  </button>\n            </div>\n        </div>\n      \n    </div>\n    <hr />\n  </div>\n  <div class=\"row justify-content-center d-flex\">\n    <div class=\"col-md-3\" *ngIf=\"isSuccess\">\n      <h2 class=\"text-success\">Successfully Submitted !</h2>\n    </div>\n  </div>\n  <ng-container *ngIf=\"isVisible\">\n    <div class=\"row bg-light m-2 py-2\" *ngIf=\"!isSuccess\">\n      <!-- <div class=\"col-md-3 mb-3\" *ngFor=\"let item of display$ | async ; index as i\"> -->\n      <div class=\"col-md-3 mb-3\" *ngFor=\"let item of display; index as i\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <p>Emp Name :{{ item.name }}</p>\n            <p>Emp Age : {{ item.age }}</p>\n            <p>Emp Add : {{ item.address }}</p>\n            <hr />\n            <button\n              class=\"btn btn-outline-primary btn-sm\"\n              (click)=\"editItem(i)\"\n            >\n              Edit\n            </button>\n            <button\n              class=\"btn btn-outline-primary btn-sm mx-2\"\n              [routerLink]=\"['/empDetail/'+item.id]\"\n            >\n              Detail\n            </button>\n            <button\n              class=\"btn btn-outline-danger btn-sm float-end\"\n              (click)=\"deleteItem(item.id)\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { FirebaseService } from 'src/app/appServices/firebase.service';\nimport { GetDetailEmployee } from 'src/app/store/actions/employee.action';\nimport { EmployeeState } from 'src/app/store/state/employee.state';\nimport { employeeItem } from '../employee/employee.component';\n\n@Component({\n  selector: 'app-employeedetail',\n  templateUrl: './employeedetail.component.html',\n  styleUrls: ['./employeedetail.component.scss']\n})\nexport class EmployeedetailComponent implements OnInit,OnDestroy {\n  empDetail: any;\n  empId:any;\n  selectedEmpSub:Subscription\n  constructor(\n    private route:ActivatedRoute,\n    private store:Store\n    )\n     { }\n  @Select(EmployeeState.selectedEmployeeOne) selectedEmployee$:Observable<employeeItem>\n  ngOnInit(): void {\n    this.empId=this.route.snapshot.params['id']\n    this.getEmpDetail(this.empId)\n  }\n  getEmpDetail(id){\n    this.store.dispatch(new GetDetailEmployee(id))\n    this.selectedEmpSub=this.selectedEmployee$.subscribe(res=>{\n      this.empDetail=res\n    })\n    // this._firebaseService.getDetail(this.empId).subscribe(\n    //   (res)=>{\n    //     this.empDetail=res\n    //     console.log(this.empDetail)\n    //   },\n    //   (err)=>{\n    //     console.log(err)\n    //   }\n    // )\n  }\n\nngOnDestroy(){\n  this.selectedEmpSub.unsubscribe()\n}\n\n}\n","<div class=\"container\">\n    <div class=\"row mt-5 justify-content-center\">\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-header\">Employee Detail</div>\n                <div class=\"card-body\">\n                    <p>Emp Name :{{ empDetail.name }}</p>\n                    <p>Emp Age : {{ empDetail.age }}</p>\n                    <p>Emp Add : {{ empDetail.address }}</p>\n                    <button class=\"btn btn-outline-primary btn-sm float-end\" routerLink='/employee'>Back</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> \n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport { FirebaseService } from '../appServices/firebase.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst material=[\n  MatToolbarModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDividerModule,\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatButtonToggleModule,\n  MatRippleModule,\n  MatMenuModule,\n  MatProgressBarModule\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    \n    material\n  ],\n  exports:[\n    material\n  ],\n  providers:[FirebaseService]\n})\nexport class MatModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.scss']\n})\nexport class ButtonsComponent implements OnInit {\n\n  constructor() { }\n  \n  ngOnInit(): void {\n    \n  }\n  \n\n}\n","\n<div class=\"materialComp\">\n<div class=\"container\">\n    <h1 class=\"pt-2\">Buttons\n        <button class=\"btn btn-primary float-end\" routerLink=\"\">Back</button>\n    </h1>\n    <mat-divider></mat-divider>\n    <div class=\"row pt-2\">\n        \n        <div class=\"col-md-6 mb-1\">\n            <mat-card>\n                <h2>Basic Button</h2>\n                <button mat-button>Button</button>\n                <button mat-button color=\"primary\">Primary</button>\n                <button mat-button color=\"accent\">Accent</button>\n                <button mat-button color=\"warn\">Warn</button>\n                <button mat-button disabled>Disabled</button>\n                <a mat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n            </mat-card>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <mat-card>\n                <h2>Raised Button</h2>\n                <button mat-raised-button>Raised</button>\n                <button mat-raised-button color=\"primary\">Primary</button>\n                <button mat-raised-button color=\"accent\">Accent</button>\n                <button mat-raised-button color=\"warn\">Warn</button>\n                <button mat-raised-button disabled>Disabled</button>\n                <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n            </mat-card>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <mat-card>\n                <h2>Stroked Button</h2>\n                <button mat-stroked-button>Raised</button>\n                <button mat-stroked-button color=\"primary\">Primary</button>\n                <button mat-stroked-button color=\"accent\">Accent</button>\n                <button mat-stroked-button color=\"warn\">Warn</button>\n                <button mat-stroked-button disabled>Disabled</button>\n                <a mat-stroked-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n            </mat-card>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <mat-card>\n                <h2>Flat Button</h2>\n                <button mat-flat-button>Raised</button>\n                <button mat-flat-button color=\"primary\">Primary</button>\n                <button mat-flat-button color=\"accent\">Accent</button>\n                <button mat-flat-button color=\"warn\">Warn</button>\n                <button mat-flat-button disabled>Disabled</button>\n                <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n            </mat-card>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <!-- use icon like fontawesome, Material and google icons -->\n            <mat-card>\n                <h2>Icon Button</h2>\n                <button mat-icon-button color=\"primary\">\n                    <mat-icon>archive</mat-icon>\n                </button>\n                <button mat-icon-button color=\"accent\">\n                    <mat-icon>cast</mat-icon>\n                </button>\n                <button mat-icon-button color=\"warn\">\n                    <mat-icon>lock</mat-icon>\n                </button>\n                <button mat-icon-button color=\"warn\">\n                    <mat-icon>email</mat-icon>\n                </button>\n                <button mat-icon-button color=\"primary\">\n                    <mat-icon>home</mat-icon>\n                </button>\n                <button mat-icon-button color=\"primary\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n                <button mat-icon-button color=\"primary\">\n                    <mat-icon>\n                        <mat-spinner diameter=\"25\"></mat-spinner>\n                    </mat-icon>\n                </button>\n                <button mat-icon-button color=\"primary\">\n                    <mat-icon>\n                        <mat-spinner color=\"accent\" diameter=\"25\"></mat-spinner>\n                    </mat-icon>\n                </button>\n            </mat-card>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <mat-card>\n                <h2>Fab Button</h2>\n                <button mat-fab>\n                    <mat-icon>\n                        home\n                    </mat-icon>\n                </button>\n                <button mat-fab color=\"primary\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n                <button mat-fab color=\"accent\">\n                    <mat-icon>lock</mat-icon>\n                </button>\n                <button mat-fab color=\"warn\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n                <button mat-fab disabled>\n                    <mat-icon>filter_alt</mat-icon>\n                </button>\n                <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n            </mat-card>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <mat-card>\n                <h2>Mini Fab Button</h2>\n                <button mat-fab>\n                    <mat-icon>\n                        home\n                    </mat-icon>\n                </button>\n                <button mat-mini-fab color=\"primary\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n                <button mat-mini-fab color=\"accent\">\n                    <mat-icon>lock</mat-icon>\n                </button>\n                <button mat-mini-fab color=\"warn\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n                <button mat-mini-fab disabled>\n                    <mat-icon>filter_alt</mat-icon>\n                </button>\n                <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n            </mat-card>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <mat-card>\n                <h2>Loading Button</h2>\n                <button mat-raised-button >\n                    Basic\n                    <mat-icon>\n                        <mat-spinner diameter=\"25\"></mat-spinner>\n                    </mat-icon>\n                </button>\n                <button mat-raised-button color=\"primary\">\n                    Basic\n                    <mat-icon>\n                        <mat-spinner diameter=\"25\" color=\"warn\"></mat-spinner>\n                    </mat-icon>\n                </button>\n                <button mat-button color=\"accent\">\n                    Basic\n                    <mat-icon>\n                        <mat-spinner diameter=\"25\"></mat-spinner>\n                    </mat-icon>\n                </button>\n                <button mat-button color=\"warn\">\n                    Basic\n                    <mat-icon>\n                        <mat-spinner diameter=\"25\"></mat-spinner>\n                    </mat-icon>\n                </button>\n                <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n            </mat-card>\n        </div>\n    </div>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ButtonsComponent } from './pages/buttons/buttons.component';\nimport { EmployeeComponent } from './pages/employee/employee.component';\nimport { EmployeedetailComponent } from './pages/employeedetail/employeedetail.component';\nimport { MainComponent } from './pages/main/main.component';\nimport { MenuComponent } from './pages/menu/menu.component';\nimport { TogglebuttonComponent } from './pages/togglebutton/togglebutton.component';\n\nconst routes: Routes = [\n  {\n    path:'',component:MainComponent\n  },\n  {\n    path:'',redirectTo:'/main',pathMatch: \"full\"\n  },\n  {\n    path:'buttons',component:ButtonsComponent\n  },\n  {\n    path:'togglebutton',component:TogglebuttonComponent\n  },\n  {\n    path:'menu',component:MenuComponent\n  },\n  {\n    path:'employee',component:EmployeeComponent\n  },\n  {\n    path:'empDetail/:id',component:EmployeedetailComponent\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { employeeItem } from \"src/app/pages/employee/employee.component\";\r\n\r\nexport class AddEmployee{\r\n    static readonly type='[Employee], Add';\r\n    constructor(public payload:employeeItem){}\r\n}\r\n\r\nexport class GetEmployee{\r\n    static readonly type='[Employee], Get';\r\n}\r\n\r\nexport class GetDetailEmployee{\r\n    static readonly type='[Employee], Set';\r\n    constructor(public id:number){}\r\n}\r\n\r\nexport class DeleteEmployee{\r\n    static readonly type='[Employee], Delete';\r\n    constructor(public id:number){}\r\n\r\n}\r\n\r\nexport class UpdateEmployee{\r\n    static readonly type='[Employee], Update';\r\n    constructor(public payload:employeeItem, public id:number){}\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}